#!/bin/bash
. $(which lib.alu-detect.sh)
#set -x

if [ "$(head "$KNOWN_ALUS")" ]; then
    have_known_alus=1
else
    have_known_alus=
fi

for len in $LEN_VALS ; do
for supp in $SUPP_VALS ; do
for null in $NULL_VALS ; do
for ci_len in $CI_LEN_VALS ; do
  print_tab -n -- $len $supp $null $ci_len /dev/null ""

  # calls on fake reference
  exec 3< <(<"$1" filter-length $len | filter-support $supp | filter-weak-null $null | filter-ci-length $ci_len)
  <&3 run_cmds "TRUTH=$TARGETS get-prec-recall" \
               "filter-ci-length 100 | TRUTH=$TARGETS get-prec-recall" \
               "filter-bp 2 | TRUTH=$TARGETS get-prec-recall" 2>/dev/null
  exec 3<&-
  print_tab -n -- "${CMD_OUTPUT[@]}" ""

  # calls on fake ref, near alus
  exec 3< <(<"$2" filter-length $len | filter-support $supp | filter-weak-null $null | filter-ci-length $ci_len)
  <&3 run_cmds "TRUTH=$TARGETS_IN_ALUS get-prec-recall" \
               "filter-ci-length 100 | TRUTH=$TARGETS_IN_ALUS get-prec-recall" \
               "filter-bp 2 | TRUTH=$TARGETS_IN_ALUS get-prec-recall" 2>/dev/null
  exec 3<&-
  print_tab -n -- "${CMD_OUTPUT[@]}" ""

  # calls on real reference
  exec 3< <(<"$3" filter-length $len | filter-support $supp | filter-weak-null $null | filter-ci-length $ci_len)
  <&3 run_cmds "TRUTH=$STANDARD_ALUS get-prec" \
               "filter-ci-length 100 | TRUTH=$STANDARD_ALUS get-prec" \
               "filter-bp 2 | TRUTH=$STANDARD_ALUS get-prec" 2>/dev/null
  exec 3<&-
  print_tab -n -- "${CMD_OUTPUT[@]}" ""

  # relative recall
  if [ $have_known_alus ]; then
      <"$3" filter-length $len | filter-support $supp | filter-weak-null $null | filter-ci-length $ci_len | TRUTH=$KNOWN_ALUS get-prec-recall ; echo
  else
      print_tab -- "." "." "." "." "." "."
  fi
done
done
done
done
